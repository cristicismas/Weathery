{"version":3,"sources":["components/Icon.js","constants/Icons.js","services/forecastWeather.js","services/api.js","services/coordinates.js","components/Header.js","components/Error.js","components/Switch.js","components/Card.js","services/dayName.js","components/WeatherCards.js","components/TemperatureChart.js","constants/Defaults.js","components/Map.js","components/Main.js","components/Footer.js","components/Navigation.js","components/LoadingScreen.js","components/App.js","serviceWorker.js","index.js"],"names":["Icon","props","styles","svg","display","verticalAlign","path","fill","color","react_default","a","createElement","style","width","concat","size","height","viewBox","className","d","icon","defaultProps","ICONS","fetchForecastWeather","query","Promise","resolve","reject","method","data","axios","toLowerCase","then","res","catch","err","response","error","message","google","window","setCoordinatesByLocation","location","contextLocation","maps","Geocoder","geocode","address","results","status","GeocoderStatus","OK","newLat","geometry","lat","newLng","lng","changeGlobalState","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","bind","assertThisInitialized","e","bigScreen","matchMedia","target","matches","cursor","paddingLeft","paddingRight","document","getElementById","zIndex","_this2","preventDefault","searchInput","value","trim","forecastWeather","newLocation","values","join","localStorage","setItem","coordinates","id","type","onClick","onSearchClick","placeholder","components_Icon","Component","Error","Switch","onSwitchClick","isToggled","toggleContainer","clipPath","backgroundColor","changeToggledValue","Card","_this$props","day","maxTemp","minTemp","wind","precip","humidity","condition","conditionIconUrl","src","alt","getDayName","dateStr","locale","Date","toLocaleDateString","weekday","WeatherCards","state","days","prevProps","formattedWeather","i","length","dayName","date","mintemp","maxtemp","condition_icon","replace","push","setState","cardList","map","components_Card","key","TemperatureChart","temperatures","avgTemp","avgtemp","_this$state","chartData","labels","datasets","label","borderColor","borderWidth","es","options","hover","mode","elements","line","tension","DEFAULTS","LAT","LNG","LOCATION","Map","onMapClick","defaultLocation","getItem","_this3","prevLocation","currentLocation","forceUpdate","nextProps","city","_this4","latLng","_this5","RenderedMap","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","position","googleMapURL","loadingElement","containerElement","mapElement","Main","isMetric","formatWeather","changeSystem","prevState","isWeatherFetched","isSystemDifferent","isLocationDifferent","currentLoopWeather","mintemp_c","maxtemp_c","avgtemp_c","wind_kph","precip_mm","avghumidity","mintemp_f","maxtemp_f","avgtemp_f","wind_mph","precip_in","formattedLocation","region","country","components_Error","components_Switch","components_WeatherCards","components_TemperatureChart","components_Map","assign","Footer","href","rel","Navigation","querySelectorAll","forEach","anchor","addEventListener","querySelector","getAttribute","scrollIntoView","behavior","block","LoadingScreen","App","userIp","isDataFetched","get","json","ip","defaultQuery","test","itemIdentifier","newItem","defineProperty","components_LoadingScreen","components_Header","components_Main","components_Footer","components_Navigation","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","components_App","URL","process","origin","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.91f9e376.chunk.js","sourcesContent":["import React from 'react';\n\nconst Icon = props => {\n  const styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle'\n    },\n    path: {\n      fill: props.color,\n    },\n  };\n\n  return (\n    <svg\n      style={styles.svg}\n      width={`${props.size}px`}\n      height={`${props.size}px`}\n      viewBox='0 0 1024 1024'\n      className='svgIcon'\n    >\n      <path\n        style={styles.path}\n        d={props.icon}\n      ></path>\n    </svg>\n  );\n};\n\nIcon.defaultProps = {\n  size: 16\n};\n\nexport default Icon;","export const ICONS = {\n  SEARCH: 'M337.509 305.372h-17.501l-6.571-5.486c20.791-25.232 33.922-57.054 33.922-93.257C347.358 127.632 283.896 64 205.135 64 127.452 64 64 127.632 64 206.629s63.452 142.628 142.225 142.628c35.011 0 67.831-13.167 92.991-34.008l6.561 5.487v17.551L415.18 448 448 415.086 337.509 305.372zm-131.284 0c-54.702 0-98.463-43.887-98.463-98.743 0-54.858 43.761-98.742 98.463-98.742 54.7 0 98.462 43.884 98.462 98.742 0 54.856-43.762 98.743-98.462 98.743z',\n  WEATHER: 'M512 328.771c0-41.045-28.339-75.45-66.498-84.74-1.621-64.35-54.229-116.031-118.931-116.031-37.896 0-71.633 17.747-93.427 45.366-12.221-15.799-31.345-25.98-52.854-25.98-36.905 0-66.821 29.937-66.821 66.861 0 3.218 0.24 6.38 0.682 9.477-5.611-1.012-11.383-1.569-17.285-1.569-53.499-0.001-96.866 43.393-96.866 96.921 0 53.531 43.367 96.924 96.865 96.924l328.131-0.006c48.069-0.092 87.004-39.106 87.004-87.223z',\n  CHART: 'M64 448h448v64h-512v-512h64zM144 416c-26.51 0-48-21.49-48-48s21.49-48 48-48c1.414 0 2.811 0.074 4.194 0.193l51.596-85.993c-4.92-7.535-7.79-16.531-7.79-26.201 0-26.51 21.49-48 48-48s48 21.49 48 48c0 9.671-2.87 18.666-7.79 26.201l51.596 85.993c1.383-0.119 2.78-0.193 4.194-0.193 1.068 0 2.124 0.047 3.175 0.115l85.178-149.061c-5.268-7.704-8.353-17.018-8.353-27.055 0-26.51 21.49-48 48-48s48 21.49 48 48c0 26.51-21.49 48-48 48-1.070 0-2.124-0.047-3.175-0.116l-85.178 149.062c5.268 7.703 8.353 17.018 8.353 27.055 0 26.51-21.49 48-48 48s-48-21.49-48-48c0-9.67 2.87-18.666 7.789-26.201l-51.595-85.992c-1.383 0.119-2.78 0.193-4.194 0.193s-2.811-0.073-4.194-0.193l-51.596 85.993c4.92 7.534 7.79 16.53 7.79 26.2 0 26.51-21.49 48-48 48z',\n  MAP: 'M256 0c-88.366 0-160 71.634-160 160 0 160 160 352 160 352s160-192 160-352c0-88.366-71.635-160-160-160zM256 258c-54.124 0-98-43.876-98-98s43.876-98 98-98 98 43.876 98 98-43.876 98-98 98zM194 160c0-34.242 27.758-62 62-62s62 27.758 62 62c0 34.242-27.759 62-62 62s-62-27.758-62-62z'\n};","import { apiCall } from '../services/api.js';\n\nexport function fetchForecastWeather(query) {\n  return new Promise((resolve, reject) => {\n    apiCall('get', `forecast_weather/${query}`)\n      .then(res => {\n        resolve(res);\n      })\n      .catch(err => {\n        reject(err.message);\n      });\n  });\n}","import axios from 'axios';\n\nexport function apiCall(method, path, data) {\n  return new Promise((resolve, reject) => {\n    return axios[method.toLowerCase()](`https://weathery-server.herokuapp.com/api/${path}`, data)\n      .then(res => {\n        return resolve(res.data);\n      })\n      .catch(err => {\n        return reject(err.response.data.error);\n      });\n  });\n}","const google = window.google;\n\nexport function setCoordinatesByLocation(location, contextLocation) {\n  return new Promise((resolve, reject) => {\n    const geocoder = new google.maps.Geocoder();\n      \n    // Set latitude and longitude for given location name.\n    geocoder.geocode({ 'address': location }, (results, status) => {\n      if (status === google.maps.GeocoderStatus.OK) {\n        const newLat = results[0].geometry.location.lat();\n        const newLng = results[0].geometry.location.lng();\n  \n        // Remove error on a successful search.\n        contextLocation.changeGlobalState('error', null);\n\n        return resolve({ newLat, newLng });\n      } else {\n        // Sometimes google maps' api gives ZERO_RESULTS even when it finds results, so ignore this error.\n        if (status === 'ZERO_RESULTS') {\n          contextLocation.changeGlobalState('error', null);\n        } else {\n          return reject(status);\n        }\n      }\n    });\n  });\n}","import React, { Component } from 'react';\nimport Icon from './Icon';\nimport '../css/Header.css';\n\nimport { ICONS } from '../constants/Icons.js';\n\nimport { fetchForecastWeather } from '../services/forecastWeather.js';\nimport { setCoordinatesByLocation } from '../services/coordinates.js';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Animate search bar.\n  onSearchClick(e) {\n    const bigScreen = window.matchMedia('(min-width: 800px)');\n\n    const elementWidth = e.target.style.width;\n\n    if (elementWidth !== '400px' && bigScreen.matches) {\n      e.target.style.width = '400px';\n      e.target.style.cursor = 'text';\n      e.target.style.paddingLeft = '25px';\n      e.target.style.paddingRight = '50px';\n      \n      const submitButton = document.getElementById('search-btn');\n      submitButton.style.zIndex = 10;\n    }\n  }\n\n  // Search for given query\n  onSubmit(e) {\n    e.preventDefault();\n\n    this.props.changeGlobalState('isDataFetched', false);\n\n    const searchInput = document.getElementById('search-input');\n\n    if (searchInput.value.trim()) {\n      const searchQuery = searchInput.value;\n\n      // Fetch weather by new query.\n      fetchForecastWeather(searchQuery).then(forecastWeather => {\n        const newLocation = Object.values(forecastWeather[0]).join(', ');\n        localStorage.setItem('lastLocation', newLocation);\n\n        // Set location coordinates in global state.\n        setCoordinatesByLocation(newLocation, this.props).then(coordinates => {\n          this.props.changeGlobalState('forecastWeather', forecastWeather);\n          this.props.changeGlobalState('lat', coordinates.newLat);\n          this.props.changeGlobalState('lng', coordinates.newLng);\n          this.props.changeGlobalState('isDataFetched', true);\n  \n          // Reset error.\n          this.props.changeGlobalState('error', '');\n        }).catch(err => {\n          this.props.changeGlobalState('error', err);\n          this.props.changeGlobalState('isDataFetched', true);\n        });\n      }).catch(err => {\n        this.props.changeGlobalState('error', err);\n        this.props.changeGlobalState('isDataFetched', true);\n      });\n\n      // Reset Input Field.\n      searchInput.value = '';\n    } else {\n      this.props.changeGlobalState('error', 'Please write something in the search bar before attempting to search.');\n      this.props.changeGlobalState('isDataFetched', true);\n    }\n  }\n\n  render() {\n    return (\n      <section id='header'>\n        <form id='search-form'>\n          <h1 id='header-title'>Weathery</h1>\n\n          <div className='container'>\n            <input id='search-input' type='text' onClick={this.onSearchClick} placeholder='City name, zip / postal / postcode or IP address.' />\n\n            <input type='submit' id='search-btn' value='' onClick={this.onSubmit} />\n            <Icon icon={ICONS.SEARCH} color='#333' size='40' />\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport '../css/Error.css';\n\nclass Error extends Component {\n  render() {\n    const { error } = this.props;\n    if (error) {\n      return (\n        <div className='error-container'>\n          <p className='error'>{error}</p>\n        </div>\n      );\n    } else {\n      return null\n    }\n  }\n}\n\nexport default Error;","import React, { Component } from 'react';\nimport '../css/Switch.css';\n\nclass Switch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSwitchClick = this.onSwitchClick.bind(this);\n  }\n\n  componentDidMount() {\n    let { isToggled } = this.props;\n\n    let toggleContainer = document.getElementById('toggle-container');\n\n    if (!isToggled) {\n      toggleContainer.style.clipPath = 'inset(0 0 0 50%)';\n      toggleContainer.style.backgroundColor = 'orange';\n    } else {\n      toggleContainer.style.clipPath = 'inset(0 50% 0 0)';\n      toggleContainer.style.backgroundColor = 'dodgerblue';\n    }\n  }\n\n  onSwitchClick() {\n    let { isToggled } = this.props;\n\n    let toggleContainer = document.getElementById('toggle-container');\n\n    this.props.changeToggledValue(!isToggled);\n\n    if (isToggled) {\n      toggleContainer.style.clipPath = 'inset(0 0 0 50%)';\n      toggleContainer.style.backgroundColor = 'orange';\n    } else {\n      toggleContainer.style.clipPath = 'inset(0 50% 0 0)';\n      toggleContainer.style.backgroundColor = 'dodgerblue';\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"switch-container\" onClick={this.onSwitchClick} >\n        <div className=\"inner-container\">\n          <div className=\"toggle\">\n            <p>Imperial</p>\n          </div>\n          <div className=\"toggle\">\n            <p>Metric</p>\n          </div>\n        </div>\n\n        <div className=\"inner-container\" id='toggle-container'>\n          <div className=\"toggle\">\n            <p>Imperial</p>\n          </div>\n          <div className=\"toggle\">\n            <p>Metric</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Switch;","import React, { Component } from 'react';\nimport '../css/Card.css';\n\nclass Card extends Component {\n  render() {\n    const { day, maxTemp, minTemp, wind, precip, humidity, condition, conditionIconUrl } = this.props;\n\n    return (\n      <div className='card'>\n        <h3 className='day-name'>{day}</h3>\n        <img className='card-img' src={conditionIconUrl} alt={condition} />\n\n        <h3 className='temp-range'>{minTemp}&#176; / {maxTemp}&#176;</h3>\n\n        <div className='weather-info'>\n          <div className='wind'><span>Wind:</span> <span className='weather-value'>{wind}</span></div>\n          <div className='precip'><span>Precipitations:</span> <span className='weather-value'>{precip}</span></div>\n          <div className='hum'><span>Humidity:</span> <span className='weather-value'>{humidity}</span></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;","export function getDayName(dateStr, locale) {\n  var date = new Date(dateStr);\n  return date.toLocaleDateString(locale, { weekday: 'long' });        \n}","import React, { Component } from 'react';\nimport Card from './Card';\nimport '../css/WeatherCard.css';\n\nimport { getDayName } from '../services/dayName.js';\n\nclass WeatherCards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      days: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { formattedWeather } = this.props;\n\n    let days = [];\n\n    if (prevProps.formattedWeather !== formattedWeather) {\n\n      for (let i = 0; i < formattedWeather.length; i++) {\n        // Get day.\n        const currentDate = formattedWeather[i].date;\n        const dayName = getDayName(currentDate);\n\n        // Get weather info.\n        const minTemp = formattedWeather[i].mintemp;\n        const maxTemp = formattedWeather[i].maxtemp;\n        const wind = formattedWeather[i].wind;\n        const precip = formattedWeather[i].precip;\n        const humidity = formattedWeather[i].humidity;\n\n        // Get condition and icon\n        const condition = formattedWeather[i].condition;\n\n        // Prefix url with 'https:' and change 64 res with 128.\n        const conditionIconUrl = 'https:' + formattedWeather[i].condition_icon.replace(/64/g, '128');\n\n        // Do this instead of pushing to the state's array because react's state should be immutable.\n        days.push({\n          dayName,\n          maxTemp, \n          minTemp, \n          wind, \n          precip, \n          humidity,\n          condition,\n          conditionIconUrl\n        });\n      }\n\n      this.setState({ days });\n    }\n  }\n\n  render() {\n    const { days } = this.state;\n\n    const cardList = days.map(day => {\n      return (\n        <Card\n          key={day.dayName}\n          day={day.dayName}\n          maxTemp={day.maxTemp}\n          minTemp={day.minTemp}\n          wind={day.wind}\n          precip={day.precip}\n          humidity={day.humidity}\n          condition={day.condition}\n          conditionIconUrl={day.conditionIconUrl} />\n      );\n    });\n\n    return (\n      <section id='weather-cards'>\n        { cardList }\n      </section>\n    );\n  }\n}\n\nexport default WeatherCards;","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport { getDayName } from '../services/dayName.js';\n\nclass TemperatureChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      days: [],\n      temperatures: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { formattedWeather } = this.props;\n\n    let days = [];\n    let temperatures = [];\n\n    if (prevProps.formattedWeather !== formattedWeather) {\n\n      // Starts from 1 because formattedWeather[0] has location info.\n      for (let i = 0; i < formattedWeather.length; i++) {\n        // Get day.\n        const currentDate = formattedWeather[i].date;\n        const dayName = getDayName(currentDate);\n\n        // Get temperature.\n        const avgTemp = formattedWeather[i].avgtemp;\n\n        days.push(dayName);\n        temperatures.push(avgTemp);\n      }\n\n      this.setState({ days, temperatures });\n    }\n  }\n\n  render() {\n    const { days, temperatures } = this.state;\n\n    // Get chart data\n    const chartData = {\n      labels: days,\n      datasets: [\n        {\n          label: 'Temperature',\n          backgroundColor: 'rgba(0, 0, 0, 0)',\n          borderColor: '#227df4',\n          borderWidth: 2,\n          data: temperatures\n        }\n      ]\n    };\n\n    const chartOptions = {\n      hover : { mode: null },\n      elements: {\n        line: {\n          tension: 0\n        }\n      }\n    };\n\n    return (\n      <div id='chart-container'>\n        <Line data={chartData} options={chartOptions} />\n      </div>\n    );\n  }\n}\n\nexport default TemperatureChart;","export const DEFAULTS = {\n  LAT: 48.8534100,\n  LNG: 2.3488000,\n  LOCATION: 'Paris'\n};","import React, { Component } from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\n\nimport { fetchForecastWeather } from '../services/forecastWeather.js';\nimport { setCoordinatesByLocation } from '../services/coordinates.js';\n\nimport { DEFAULTS } from '../constants/Defaults.js';\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapClick = this.onMapClick.bind(this);\n  }\n\n  componentDidMount() {\n    const defaultLocation = localStorage.getItem('lastLocation') || DEFAULTS.LOCATION;\n    this.props.changeGlobalState('isDataFetched', false);\n\n    setCoordinatesByLocation(defaultLocation, this.props).then(coordinates => {\n      this.props.changeGlobalState('lat', coordinates.newLat);\n      this.props.changeGlobalState('lng', coordinates.newLng);\n      this.props.changeGlobalState('isDataFetched', true);\n    }).catch(err => {\n      this.props.changeGlobalState('error', err);\n      this.props.changeGlobalState('isDataFetched', true);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { forecastWeather } = this.props;\n    const defaultLocation = localStorage.getItem('lastLocation') || DEFAULTS.LOCATION;\n\n    const prevLocation = prevProps.forecastWeather.length ? Object.values(prevProps.forecastWeather[0]).join(', ') : defaultLocation;\n    const currentLocation = forecastWeather.length ? Object.values(forecastWeather[0]).join(', ') : defaultLocation;\n\n    if (prevLocation !== currentLocation) {\n      this.props.changeGlobalState('isDataFetched', false);\n\n      setCoordinatesByLocation(currentLocation, this.props).then(coordinates => {\n        this.props.changeGlobalState('lat', coordinates.newLat);\n        this.props.changeGlobalState('lng', coordinates.newLng);\n        this.props.changeGlobalState('isDataFetched', true);\n        this.forceUpdate();\n      }).catch(err => {\n        this.props.changeGlobalState('error', err);\n        this.props.changeGlobalState('isDataFetched', true);\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { forecastWeather } = this.props;\n    const defaultLocation = localStorage.getItem('lastLocation') || DEFAULTS.LOCATION;\n    \n    const currentCity = forecastWeather.length ? forecastWeather[0].city : defaultLocation;\n    const nextCity = nextProps.forecastWeather.length ? nextProps.forecastWeather[0].city : defaultLocation;\n\n    if (currentCity === nextCity) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onMapClick(e) {\n    this.props.changeGlobalState('isDataFetched', false);\n\n    const newLat = e.latLng.lat();\n    const newLng = e.latLng.lng();\n\n    fetchForecastWeather(`${newLat},${newLng}`).then(forecastWeather => {\n      const newLocation = Object.values(forecastWeather[0]).join(', ');\n      localStorage.setItem('lastLocation', newLocation);\n      \n      setCoordinatesByLocation(newLocation, this.props).then(coordinates => {\n        this.props.changeGlobalState('forecastWeather', forecastWeather);\n        this.props.changeGlobalState('lat', coordinates.newLat);\n        this.props.changeGlobalState('lng', coordinates.newLng);\n        this.props.changeGlobalState('isDataFetched', true);\n\n        // Reset error.\n        this.props.changeGlobalState('error', '');\n\n        this.forceUpdate();\n      }).catch(err => {\n        this.props.changeGlobalState('error', err);\n        this.props.changeGlobalState('isDataFetched', true);\n      });\n    }).catch(err => {\n      this.props.changeGlobalState('error', err);\n      this.props.changeGlobalState('isDataFetched', true);\n    });\n  }\n\n  render() {\n    const { lat, lng } = this.props;\n\n    const RenderedMap = withScriptjs(withGoogleMap(props => \n      <GoogleMap defaultZoom={5} defaultCenter={{ lat, lng }} onClick={this.onMapClick}>\n        <Marker position={{ lat, lng }} />\n      </GoogleMap>\n    ));\n\n    return (\n      <div id='map'>\n        <RenderedMap \n          googleMapURL='https://maps.googleapis.com/maps/api/js?key=AIzaSyCYGAkeDkpAFR4l3bZ9x3BdTwXGlJrHQcI'\n          loadingElement={<div style={{ width: `100%` }} />}\n          containerElement={<div style={{ height: `100%` }} />}\n          mapElement={<div style={{ height: `100%` }} />} />\n      </div>\n    );\n  }\n}\n\nexport default Map;","import React, { Component } from 'react';\nimport Error from './Error';\nimport Switch from './Switch';\nimport WeatherCards from './WeatherCards';\nimport TemperatureChart from './TemperatureChart';\nimport Map from './Map';\nimport '../css/Main.css';\n\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    let isMetric = true;\n\n    // Check localStorage for last isMetric value\n    // Compares with string because that's how values are stored in localStorage\n    if (localStorage.getItem('isMetric') === 'false') {\n      isMetric = false;\n    }\n\n    this.state = { \n      formattedWeather: [],\n      isMetric \n    };\n\n    this.formatWeather = this.formatWeather.bind(this);\n    this.changeSystem = this.changeSystem.bind(this);\n  }\n\n  componentDidMount() {\n    this.formatWeather();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const isWeatherFetched = prevProps.forecastWeather.length !== this.props.forecastWeather.length;\n    const isSystemDifferent = prevState.isMetric !== this.state.isMetric;\n    \n    const isLocationDifferent = \n      prevProps.forecastWeather.length ? \n      prevProps.forecastWeather[0].city !== this.props.forecastWeather[0].city : \n      false;\n\n    if (isWeatherFetched || isSystemDifferent || isLocationDifferent) {\n      this.formatWeather();\n    }\n  }\n\n  formatWeather() {\n    const { isMetric } = this.state;\n    const { forecastWeather } = this.props;\n\n    let formattedWeather = [];\n\n    // Starts from 1 because forecastWeather[0] has location info\n    for (let i = 1; i < forecastWeather.length; i++) {\n      const currentLoopWeather = forecastWeather[i];\n\n      if (isMetric) {\n        formattedWeather.push({\n          date: currentLoopWeather.date,\n          mintemp: currentLoopWeather.mintemp_c + ' C',\n          maxtemp: currentLoopWeather.maxtemp_c + ' C',\n          avgtemp: currentLoopWeather.avgtemp_c,\n          wind: currentLoopWeather.wind_kph + ' kph',\n          precip: currentLoopWeather.precip_mm + ' mm',\n          humidity: currentLoopWeather.avghumidity + ' %',\n          condition: currentLoopWeather.condition,\n          condition_icon: currentLoopWeather.condition_icon\n        });\n      } else {\n        formattedWeather.push({\n          date: currentLoopWeather.date,\n          mintemp: currentLoopWeather.mintemp_f + ' F',\n          maxtemp: currentLoopWeather.maxtemp_f + ' F',\n          avgtemp: currentLoopWeather.avgtemp_f,\n          wind: currentLoopWeather.wind_mph + ' mph',\n          precip: currentLoopWeather.precip_in + ' in',\n          humidity: currentLoopWeather.avghumidity + ' %',\n          condition: currentLoopWeather.condition,\n          condition_icon: currentLoopWeather.condition_icon\n        });\n      }\n    }\n\n    this.setState({ formattedWeather });\n  }\n\n  changeSystem(isMetric) {\n    localStorage.setItem('isMetric', isMetric);\n    this.setState({ isMetric });\n  }\n\n  render() {\n    const { isMetric, formattedWeather } = this.state;\n    const { error, forecastWeather } = this.props;\n    \n    const currentLocation = forecastWeather[0];\n\n    let formattedLocation = '';\n\n    // Format location data\n    if (currentLocation) {\n      if (currentLocation.city) formattedLocation += `${currentLocation.city}, `;\n      if (currentLocation.region) formattedLocation += `${currentLocation.region}, `;\n      if (currentLocation.country) formattedLocation += `${currentLocation.country}`;\n    }\n\n    return (\n      <section id='main'>\n        <Error error={error} />\n        \n        <Switch isToggled={isMetric} changeToggledValue={this.changeSystem} />\n\n        <h2 className='location'>{formattedLocation}</h2>\n\n        <WeatherCards formattedWeather={formattedWeather} />\n\n        <div className='flex-container'>\n          <TemperatureChart formattedWeather={formattedWeather} />\n          <Map changeGlobalState={this.props.changeGlobalState} forecastWeather={forecastWeather} {...this.props} />\n        </div>\n\n      </section>\n    );\n  }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport '../css/Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <section id='footer'>\n        <p>Weather data from <a href='https://www.apixu.com/' target='_blank' rel=\"noopener noreferrer\">APIXU</a></p>\n        <p>Made by <a href='https://cristicismas.github.io/' target='_blank' rel=\"noopener noreferrer\">Cristi Cismas</a></p>\n      </section>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { ICONS } from '../constants/Icons';\nimport '../css/Navigation.css';\n\nimport Icon from './Icon';\n\nclass Navigation extends Component {\n  componentDidMount() {\n    // Adds smooth scroll on link click.\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n      anchor.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        document.querySelector(this.getAttribute('href')).scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n      });\n    });\n  }\n  render() {\n    return (\n      <div id='nav'>\n        <a href=\"#weather-cards\" className='nav-item'>\n          <Icon icon={ICONS.WEATHER} size={64} color='#444' />\n          <p>Weather</p>\n        </a>\n\n        <a href=\"#chart-container\" className='nav-item'>\n          <Icon icon={ICONS.CHART} size={64} color='#444' />\n          <p>Chart</p>\n        </a>\n\n        <a href=\"#map\" className='nav-item'>\n          <Icon icon={ICONS.MAP} size={64} color='#444' />\n          <p>Map</p>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport '../css/LoadingScreen.css';\n\nclass LoadingScreen extends Component {\n  render() {\n    return (\n      <div className='loading-overlay'>\n        <div className='loading-container'></div>\n      </div>\n    );\n  }\n}\n\nexport default LoadingScreen;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Navigation from './Navigation';\nimport '../css/App.css';\n\nimport { DEFAULTS } from '../constants/Defaults.js';\n\nimport { fetchForecastWeather } from '../services/forecastWeather.js';\nimport { setCoordinatesByLocation } from '../services/coordinates.js';\n\nimport axios from 'axios';\nimport LoadingScreen from './LoadingScreen';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      userIp: '',\n      forecastWeather: [],\n      lat: DEFAULTS.LAT,\n      lng: DEFAULTS.LNG,\n      isDataFetched: false\n    };\n\n    this.changeGlobalState = this.changeGlobalState.bind(this);\n  }\n\n  componentWillMount() {\n    axios.get(`https://api.ipify.org?format=json`).then(json => {\n      localStorage.setItem('userIp', json.data.ip);\n    });\n  }\n\n  componentDidMount() {\n    let defaultQuery = localStorage.getItem('lastLocation') || DEFAULTS.LOCATION;\n\n    const ipRegex = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n    const userIp = localStorage.getItem('userIp');\n\n    if (userIp && ipRegex.test(userIp)) {\n      defaultQuery = userIp;\n    }\n\n    fetchForecastWeather(defaultQuery).then(forecastWeather => {\n      const newLocation = Object.values(forecastWeather[0]).join(', ');\n      \n      setCoordinatesByLocation(newLocation, this).then(coordinates => {\n        this.setState({ \n          forecastWeather: forecastWeather, \n          lat: coordinates.newLat,\n          lng: coordinates.newLng,\n          error: '', \n          isDataFetched: true\n        });\n      }).catch(err => this.setState({ error: err, isDataFetched: true }));\n    }).catch(err => {\n      this.setState({ error: err, isDataFetched: true });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { forecastWeather } = this.state;\n    const defaultLocation = localStorage.getItem('lastLocation') || DEFAULTS.LOCATION;\n\n    const prevLocation = prevState.forecastWeather.length ? Object.values(prevState.forecastWeather[0]).join(', ') : defaultLocation;\n    const currentLocation = forecastWeather.length ? Object.values(forecastWeather[0]).join(', ') : defaultLocation;\n\n    if (prevLocation !== currentLocation) {\n      this.forceUpdate();\n    }\n  }\n\n  changeGlobalState(itemIdentifier, newItem) {\n    this.setState({ [itemIdentifier]: newItem });\n  }\n\n  render() {\n    const { isDataFetched } = this.state;\n\n    return (\n      <div className='App'>\n        {\n          !isDataFetched ?\n          <LoadingScreen /> :\n          null\n        }\n\n        <Header \n          changeGlobalState={this.changeGlobalState} />\n\n        <Main \n          changeGlobalState={this.changeGlobalState} \n          {...this.state} />\n\n        <Footer />\n        <Navigation />\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}